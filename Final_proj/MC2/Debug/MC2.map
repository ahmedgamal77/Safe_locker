Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./UART.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./MC2.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./EEPROM.o
LOAD ./I2C.o
LOAD ./MC2.o
LOAD ./TIMER.o
LOAD ./UART.o
LOAD ./motor.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xf66
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./EEPROM.o
 .text          0x0000007c        0x0 ./I2C.o
 .text          0x0000007c        0x0 ./MC2.o
 .text          0x0000007c        0x0 ./TIMER.o
 .text          0x0000007c        0x0 ./UART.o
 .text          0x0000007c        0x0 ./motor.o
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.EEPROM_init
                0x0000007c       0x12 ./EEPROM.o
                0x0000007c                EEPROM_init
 .text.EEPROM_writeByte
                0x0000008e       0x82 ./EEPROM.o
                0x0000008e                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000110       0xc0 ./EEPROM.o
                0x00000110                EEPROM_readByte
 .text.TWI_init
                0x000001d0       0x2c ./I2C.o
                0x000001d0                TWI_init
 .text.TWI_start
                0x000001fc       0x20 ./I2C.o
                0x000001fc                TWI_start
 .text.TWI_stop
                0x0000021c       0x16 ./I2C.o
                0x0000021c                TWI_stop
 .text.TWI_write
                0x00000232       0x2e ./I2C.o
                0x00000232                TWI_write
 .text.TWI_readWithACK
                0x00000260       0x26 ./I2C.o
                0x00000260                TWI_readWithACK
 .text.TWI_readWithNACK
                0x00000286       0x26 ./I2C.o
                0x00000286                TWI_readWithNACK
 .text.TWI_getStatus
                0x000002ac       0x16 ./I2C.o
                0x000002ac                TWI_getStatus
 .text.DI       0x000002c2       0x18 ./MC2.o
                0x000002c2                DI
 .text.main     0x000002da      0x278 ./MC2.o
                0x000002da                main
 .text.compareArray
                0x00000552       0x76 ./MC2.o
                0x00000552                compareArray
 .text.TIMER_Init
                0x000005c8      0x2d4 ./TIMER.o
                0x000005c8                TIMER_Init
 .text.TIMER_Start
                0x0000089c      0x13e ./TIMER.o
                0x0000089c                TIMER_Start
 .text.TIMER_Stop
                0x000009da       0x38 ./TIMER.o
                0x000009da                TIMER_Stop
 .text.TIMER_Timer1SetCallBack
                0x00000a12       0x24 ./TIMER.o
                0x00000a12                TIMER_Timer1SetCallBack
 .text.__vector_6
                0x00000a36       0x66 ./TIMER.o
                0x00000a36                __vector_6
 .text.__vector_8
                0x00000a9c       0x66 ./TIMER.o
                0x00000a9c                __vector_8
 .text.UART_Init
                0x00000b02      0x250 ./UART.o
                0x00000b02                UART_Init
 .text.UART_SendByte
                0x00000d52       0x2e ./UART.o
                0x00000d52                UART_SendByte
 .text.UART_RecieveByte
                0x00000d80       0x1e ./UART.o
                0x00000d80                UART_RecieveByte
 .text.UART_SendString
                0x00000d9e       0x52 ./UART.o
                0x00000d9e                UART_SendString
 .text.UART_ReceiveString
                0x00000df0       0x86 ./UART.o
                0x00000df0                UART_ReceiveString
 .text.motor_on_clk_wise
                0x00000e76       0x38 ./motor.o
                0x00000e76                motor_on_clk_wise
 .text.motor_on_anti_clk_wise
                0x00000eae       0x38 ./motor.o
                0x00000eae                motor_on_anti_clk_wise
 .text.motor_off
                0x00000ee6       0x38 ./motor.o
                0x00000ee6                motor_off
 .text.libgcc   0x00000f1e       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000f1e                __udivmodsi4
 .text.libgcc   0x00000f62        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000f62        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000f62                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000f62        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000f62                exit
                0x00000f62                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000f62        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000f66                _etext = .

.data           0x00800060        0x0 load address 0x00000f66
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./EEPROM.o
 .data          0x00800060        0x0 ./I2C.o
 .data          0x00800060        0x0 ./MC2.o
 .data          0x00800060        0x0 ./TIMER.o
 .data          0x00800060        0x0 ./UART.o
 .data          0x00800060        0x0 ./motor.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x3
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800060        0x0 ./EEPROM.o
 .bss           0x00800060        0x0 ./I2C.o
 .bss           0x00800060        0x0 ./MC2.o
 .bss           0x00800060        0x0 ./TIMER.o
 .bss           0x00800060        0x0 ./UART.o
 .bss           0x00800060        0x0 ./motor.o
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.FLAG      0x00800060        0x1 ./MC2.o
                0x00800060                FLAG
 .bss.timer1    0x00800061        0x2 ./TIMER.o
 *(COMMON)
                0x00800063                PROVIDE (__bss_end, .)
                0x00000f66                __data_load_start = LOADADDR (.data)
                0x00000f66                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800063        0x0
                0x00800063                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800063                PROVIDE (__noinit_end, .)
                0x00800063                _end = .
                0x00800063                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1c44
 *(.stab)
 .stab          0x00000000      0x648 ./EEPROM.o
 .stab          0x00000648      0x324 ./I2C.o
                                0x5dc (size before relaxing)
 .stab          0x0000096c      0x600 ./MC2.o
                                0x8ac (size before relaxing)
 .stab          0x00000f6c      0x618 ./TIMER.o
                                0x8dc (size before relaxing)
 .stab          0x00001584      0x480 ./UART.o
                                0x72c (size before relaxing)
 .stab          0x00001a04      0x240 ./motor.o
                                0x4e0 (size before relaxing)

.stabstr        0x00000000      0xe2a
 *(.stabstr)
 .stabstr       0x00000000      0xe2a ./EEPROM.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(MC2.elf elf32-avr)
LOAD linker stubs
